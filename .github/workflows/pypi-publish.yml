name: Upload Python Package

on:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Get version number from release
      id: get-version
      uses: battila7/get-version-action@v2
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
    - name: Check version number
      run: |
        PACKAGE_VERSION=$(python setup.py --version)
        RELEASE_VERSION=${{ steps.get-version.outputs.version-without-v }}
        if [ $PACKAGE_VERSION != $RELEASE_VERSION ]; then
          echo "Package version $PACKAGE_VERSION does not match release version $RELEASE_VERSION"
          exit 1
        fi
    - name: Build
      run: |
        python -m build
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
